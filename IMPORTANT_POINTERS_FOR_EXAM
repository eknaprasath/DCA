IMPORTANT_POINTERS_DOMAIN 1

PART 01

1. You should know how to create swarm service
  * docker service create --name webserver --replicas 1 nginx
  
2. Difference between replicated and global service

  * Replicated service will have N number of containers defined with the --replica flag
  * Global service will create 1 container in every node of the cluster.
  
PART 02

3. Multiple approaches to scale swarm service
  
  * docker service scale mywebserver=5
  * docker service update --replicas 5 mywebserver
  
4. Difference between two approaches to scale swarm service
  
  * docker service scale allows us to specify multiple services in same command.
  * docker service update command only allows us to specivy one service per command
  
PART 03

5. Draining Swarm Node

  * docker node update --availability drain swarm03
  * docker node update --availability active swarm03
  
6. Understanding the use-case of Docker Stack CLI

  * docker stack deploy --compose-file docker-compose.yml
  
PART 04

7. Placement Constraints

  * docker service create --name webserver --constraint node.label.region==blr nginx
  * docker service create --name webserver --constraint node.label.region!=blr nginx
  
8. Adding Labels to a node

  * docker node update --label-add region=mumbai worker-node-id
  
PART 05

9. Overlay Networks & Security

  Overlay network allows containers spreaded across different servers to communicate.
  The communicaiton between containers can be made secured with IPSec tunnels.
  
  docker network create --opt encrypted --driver overlay my-overlay-secure-network
  
 PART 06 
 
10. Revise and Double Revise the Quorum

    Cluster Size                  Majority                       Fault Tolerance
    1                              0                                 0
    2                              2                                 0
    3                              2                                 1
    4                              3                                 1
    5                              3                                 2
    6                              4                                 2
    7                              4                                 3
    
PART 07    
11. Troubleshooting aspect

  * "docker system events" provides you real-time even information from your server.
  * Service Deployment would be in pending state if node is drained.
  * Service deployments can also be in pending state due to placement constraints.
  * You can further inspect the task to see more information.
  
  
  
  IMPORTANT_POINTERS_DOMAIN 2
  
  PART 01
  
   1. Have thorough understanding about various Dockerfile options
   
     ADD
     COPY
     RUN
     ENTRYPOINT
     VOLUMES
     CMD
     HEALTHCHECK
     
 PART 02
 
   2. Understand difference between ADD and COPY 
   
     COPY allows us to copy files from local source to destination.
     ADD allows the same in addition to using URL & extraction capabilities of TAR files.
     
   3. Know difference between CMD and ENTRYPOINT
   
     * CMD can be overridden.
     * ENTRYPOINT cannot be overridden.
     
   PART 03
   
   4 Use-cases of using ADD vs wget / curl
   
     * Because image size matters, using ADD to fetch packages from remote URLs is strongly discouraged; you should use curl or wget instead.
     
       ADD https://example.com/big.tar.xz /usr/src/things/
       RUN tar -xJf /usr/src/things/big.tar.xz -C /usr/src/things
       RUN make -C /usr/src/things all
       
       RUN makdir -p /usr/src/things \
           && curl -SL http://example.com/big.tar.xz \
           | tar -xJC /usr/src/things \
           && make -C /usr/src/things all
           
   PART 04
   
    5 Understanding the format option
    
       Format options allows us to format the output based on various criteria that we have defined with the command.
        
       docker images --format "{{.ID}}: {{.Repository}}"
       
  PART 05
    
    6 Understanding the filter option
      
       Filter option allows us to filter output based on condition provided.
       
       Sample Use-Case:
       
         * Show all the dangling images
         * Show all the images created after N image.
         * Show all the containers which are in the excited stage.
         
         
         docker images --filter "before=ubuntu"
         docker images --filter "dangling=true"
         
   PART 06
     
     7. Accessing in-secure docker registries
     
       By default, docker will not allow you to perform operation with an insecure registry.
       You can override by adding following stanza within the /etc/docker/daemon.json file
       
       {
       "insecure-registries" : ["myregistrydomin.com:5000"]
       }
       
   PART 07
   
     8. Pushing an image to a private repository
     
       In order to push an image to private repository, you will have to tage it with the DNS name..
       
      For Example:
        
        Registry Name: example.com
        docker tag ubuntu:latest example.com/myrepo:ubuntu
        
        
    PART 08
    
      9. Login to a private repository
      
        docker login example.com
        
      10. Searchability Aspect of Images
      
        * docker search nginx
        * docker search nginx --filter "is-official=true"
        
    PART 09
       
      11. Transferring Image / Container from one host to another
      
        * docker commit container-id image-name
        * docker save image-name > image-name.tar
        * docker export <containerID> > /home/export.tar
     
       When  we export a container, all the resultant imported image will be flattened.
       
       
       
    IMPORTANT_POINTERS_DOMAIN 3
    
      PART 01
      
      1. Overview of DTR Backup Process
        
        * When we backup DTR, there are certain things which are not backed.
        * User/Organization backup should be taken from UCP.
        
        
      Data                     Description                                                                   Backed up
      Raft keys               Used to encrypt communicaiton among swarm nodes and to encrypt and                yes
                              decrypt Raft logs                                                         
      membership              List of the nodes in the cluster                                                  yes
      Service                 Stacks and services stored in Swarm-mode                                          yes
      (overlay) networks      The overlay networks created on the cluster                                       yes
      configs                 The configs created in the cluster                                                yes
      Secrets                 Secrets saved in the cluster                                                      yes
      Swarm unlock key        MUST BE SAVED ON A PASSWORD MANAGER !                                              NO
      
      
     
